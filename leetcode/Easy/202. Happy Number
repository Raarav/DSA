Q->https://leetcode.com/problems/happy-number/

//optimise
class Solution {
    public boolean isHappy(int n) {
      int slow=n;
      int fast=n;
        do{
            slow=findSquare(slow);
            fast=findSquare(findSquare(fast));
        }while(slow!=fast);
        
        if(slow==1){
            return true;
        }
        return false;
    }
    public int findSquare(int num){
        int n=0;
        while(num>0){
            int mod=num%10;
            n+=mod*mod;
            num/=10;
            }
        return n;
    }
}
//mine
// class Solution {
//     public boolean isHappy(int n) {
//         Set<Integer> set = new HashSet<>();
//         int val;
//         int index;
//         while(true){
//             val = 0;
//             while(n>0){
//                 index = n%10;
//                 val += index*index;
//                 n /= 10;
//             }
//             if(val == 1){
//                 return true;
//             }else if(set.contains(val)){
//                 return false;
//             }
//             set.add(val);
//             n = val;
//         }
//         // return false;
//     }
// }